{"version":3,"file":"overlay-qxE25JXI.js","sources":["../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/utils/meta.js","../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/utils/index.js","../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/utils/prerender.js","../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/image.js","../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/providers/ipx.js","../../../../virtual:nuxt:C:/Users/jpedr/OneDrive/Documentos/Coding/learning/joao/weather-forecast/frontend/.nuxt/image-options.mjs","../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/composables.js","../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/components/_base.js","../../../../node_modules/.pnpm/nuxt@3.13.0_sass@1.77.8_vite@5.4.2/node_modules/nuxt/dist/app/composables/asyncData.js","../../../../node_modules/.pnpm/nuxt@3.13.0_sass@1.77.8_vite@5.4.2/node_modules/nuxt/dist/app/composables/state.js","../../../../node_modules/.pnpm/nuxt@3.13.0_sass@1.77.8_vite@5.4.2/node_modules/nuxt/dist/app/components/client-only.js","../../../../node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/components/NuxtImg.vue","../../../../public/assets/icons/wind.vue","../../../../public/assets/icons/pressure.vue","../../../../public/assets/icons/sun.vue","../../../../public/assets/icons/humidity.vue","../../../../utils/utils.ts","../../../../components/weather-forecast/weather-forecast-item.vue","../../../../components/weather-forecast/weather-forecast.vue","../../../../utils/constants/constants.ts","../../../../components/weather-status/weather-status.vue","../../../../components/hero/hero.vue","../../../../components/overlay/overlay.vue"],"sourcesContent":["export async function imageMeta(_ctx, url) {\n  const meta = await _imageMeta(url).catch((err) => {\n    console.error(\"Failed to get image meta for \" + url, err + \"\");\n    return {\n      width: 0,\n      height: 0,\n      ratio: 0\n    };\n  });\n  return meta;\n}\nasync function _imageMeta(url) {\n  if (import.meta.server) {\n    const imageMeta2 = await import(\"image-meta\").then((r) => r.imageMeta);\n    const data = await fetch(url).then((res) => res.buffer());\n    const metadata = imageMeta2(data);\n    if (!metadata) {\n      throw new Error(`No metadata could be extracted from the image \\`${url}\\`.`);\n    }\n    const { width, height } = metadata;\n    const meta = {\n      width,\n      height,\n      ratio: width && height ? width / height : void 0\n    };\n    return meta;\n  }\n  if (typeof Image === \"undefined\") {\n    throw new TypeError(\"Image not supported\");\n  }\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => {\n      const meta = {\n        width: img.width,\n        height: img.height,\n        ratio: img.width / img.height\n      };\n      resolve(meta);\n    };\n    img.onerror = (err) => reject(err);\n    img.src = url;\n  });\n}\n","export default function imageFetch(url) {\n  return fetch(cleanDoubleSlashes(url));\n}\nexport function getInt(x) {\n  if (typeof x === \"number\") {\n    return x;\n  }\n  if (typeof x === \"string\") {\n    return Number.parseInt(x, 10);\n  }\n  return void 0;\n}\nexport function getFileExtension(url = \"\") {\n  const extension = url.split(/[?#]/).shift().split(\"/\").pop().split(\".\").pop();\n  return extension;\n}\nexport function cleanDoubleSlashes(path = \"\") {\n  return path.replace(/(https?:\\/\\/)|(\\/)+/g, \"$1$2\");\n}\nexport function createMapper(map) {\n  return (key) => {\n    return key ? map[key] || key : map.missingValue;\n  };\n}\nexport function createOperationsGenerator({ formatter, keyMap, joinWith = \"/\", valueMap } = {}) {\n  if (!formatter) {\n    formatter = (key, value) => `${key}=${value}`;\n  }\n  if (keyMap && typeof keyMap !== \"function\") {\n    keyMap = createMapper(keyMap);\n  }\n  const map = valueMap || {};\n  Object.keys(map).forEach((valueKey) => {\n    if (typeof map[valueKey] !== \"function\") {\n      map[valueKey] = createMapper(map[valueKey]);\n    }\n  });\n  return (modifiers = {}) => {\n    const operations = Object.entries(modifiers).filter(([_, value]) => typeof value !== \"undefined\").map(([key, value]) => {\n      const mapper = map[key];\n      if (typeof mapper === \"function\") {\n        value = mapper(modifiers[key]);\n      }\n      key = typeof keyMap === \"function\" ? keyMap(key) : key;\n      return formatter(key, value);\n    });\n    return operations.join(joinWith);\n  };\n}\nexport function renderAttributesToString(attributes = {}) {\n  return Object.entries(attributes).map(([key, value]) => value ? `${key}=\"${value}\"` : \"\").filter(Boolean).join(\" \");\n}\nexport function renderTag(tag, attrs, contents) {\n  const html = `<${tag} ${renderAttributesToString(attrs)}>`;\n  if (!contents) {\n    return html;\n  }\n  return html + contents + `</${tag}>`;\n}\nexport function generateAlt(src = \"\") {\n  return src.split(/[?#]/).shift().split(\"/\").pop().split(\".\").shift();\n}\nexport function parseSize(input = \"\") {\n  if (typeof input === \"number\") {\n    return input;\n  }\n  if (typeof input === \"string\") {\n    if (input.replace(\"px\", \"\").match(/^\\d+$/g)) {\n      return Number.parseInt(input, 10);\n    }\n  }\n}\nexport function parseDensities(input = \"\") {\n  if (input === void 0 || !input.length) {\n    return [];\n  }\n  const densities = /* @__PURE__ */ new Set();\n  for (const density of input.split(\" \")) {\n    const d = Number.parseInt(density.replace(\"x\", \"\"));\n    if (d) {\n      densities.add(d);\n    }\n  }\n  return Array.from(densities);\n}\nexport function checkDensities(densities) {\n  if (densities.length === 0) {\n    throw new Error(\"`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)\");\n  }\n  if (import.meta.dev && Array.from(densities).some((d) => d > 2)) {\n    const _densities = densities;\n    if (!_densities._warned) {\n      console.warn(\"[nuxt] [image] Density values above `2` are not recommended. See https://observablehq.com/@eeeps/visual-acuity-and-device-pixel-ratio.\");\n    }\n    _densities._warned = true;\n  }\n}\nexport function parseSizes(input) {\n  const sizes = {};\n  if (typeof input === \"string\") {\n    for (const entry of input.split(/[\\s,]+/).filter((e) => e)) {\n      const s = entry.split(\":\");\n      if (s.length !== 2) {\n        sizes[\"1px\"] = s[0].trim();\n      } else {\n        sizes[s[0].trim()] = s[1].trim();\n      }\n    }\n  } else {\n    Object.assign(sizes, input);\n  }\n  return sizes;\n}\n","import { appendHeader } from \"h3\";\nimport { useRequestEvent } from \"#imports\";\nexport function prerenderStaticImages(src = \"\", srcset = \"\") {\n  if (!import.meta.server || !import.meta.prerender) {\n    return;\n  }\n  const paths = [\n    src,\n    ...srcset.split(\", \").map((s) => s.trim().split(\" \")[0].trim())\n  ].filter((s) => s && s.includes(\"/_ipx/\"));\n  if (!paths.length) {\n    return;\n  }\n  appendHeader(useRequestEvent(), \"x-nitro-prerender\", paths.map((p) => encodeURIComponent(p)).join(\", \"));\n}\n","import { defu } from \"defu\";\nimport { hasProtocol, parseURL, joinURL, withLeadingSlash } from \"ufo\";\nimport { imageMeta } from \"./utils/meta.js\";\nimport { checkDensities, parseDensities, parseSize, parseSizes } from \"./utils/index.js\";\nimport { prerenderStaticImages } from \"./utils/prerender.js\";\nexport function createImage(globalOptions) {\n  const ctx = {\n    options: globalOptions\n  };\n  const getImage = (input, options = {}) => {\n    const image = resolveImage(ctx, input, options);\n    if (import.meta.server && import.meta.prerender) {\n      prerenderStaticImages(image.url);\n    }\n    return image;\n  };\n  const $img = (input, modifiers = {}, options = {}) => {\n    return getImage(input, {\n      ...options,\n      modifiers: defu(modifiers, options.modifiers || {})\n    }).url;\n  };\n  for (const presetName in globalOptions.presets) {\n    $img[presetName] = (source, modifiers, options) => $img(source, modifiers, { ...globalOptions.presets[presetName], ...options });\n  }\n  $img.options = globalOptions;\n  $img.getImage = getImage;\n  $img.getMeta = (input, options) => getMeta(ctx, input, options);\n  $img.getSizes = (input, options) => getSizes(ctx, input, options);\n  ctx.$img = $img;\n  return $img;\n}\nasync function getMeta(ctx, input, options) {\n  const image = resolveImage(ctx, input, { ...options });\n  if (typeof image.getMeta === \"function\") {\n    return await image.getMeta();\n  } else {\n    return await imageMeta(ctx, image.url);\n  }\n}\nfunction resolveImage(ctx, input, options) {\n  if (input && typeof input !== \"string\") {\n    throw new TypeError(`input must be a string (received ${typeof input}: ${JSON.stringify(input)})`);\n  }\n  if (!input || input.startsWith(\"data:\")) {\n    return {\n      url: input\n    };\n  }\n  const { provider, defaults } = getProvider(ctx, options.provider || ctx.options.provider);\n  const preset = getPreset(ctx, options.preset);\n  input = hasProtocol(input) ? input : withLeadingSlash(input);\n  if (!provider.supportsAlias) {\n    for (const base in ctx.options.alias) {\n      if (input.startsWith(base)) {\n        const alias = ctx.options.alias[base];\n        if (alias) {\n          input = joinURL(alias, input.slice(base.length));\n        }\n      }\n    }\n  }\n  if (provider.validateDomains && hasProtocol(input)) {\n    const inputHost = parseURL(input).host;\n    if (!ctx.options.domains.find((d) => d === inputHost)) {\n      return {\n        url: input\n      };\n    }\n  }\n  const _options = defu(options, preset, defaults);\n  _options.modifiers = { ..._options.modifiers };\n  const expectedFormat = _options.modifiers.format;\n  if (_options.modifiers?.width) {\n    _options.modifiers.width = parseSize(_options.modifiers.width);\n  }\n  if (_options.modifiers?.height) {\n    _options.modifiers.height = parseSize(_options.modifiers.height);\n  }\n  const image = provider.getImage(input, _options, ctx);\n  image.format = image.format || expectedFormat || \"\";\n  return image;\n}\nfunction getProvider(ctx, name) {\n  const provider = ctx.options.providers[name];\n  if (!provider) {\n    throw new Error(\"Unknown provider: \" + name);\n  }\n  return provider;\n}\nfunction getPreset(ctx, name) {\n  if (!name) {\n    return {};\n  }\n  if (!ctx.options.presets[name]) {\n    throw new Error(\"Unknown preset: \" + name);\n  }\n  return ctx.options.presets[name];\n}\nfunction getSizes(ctx, input, opts) {\n  const width = parseSize(opts.modifiers?.width);\n  const height = parseSize(opts.modifiers?.height);\n  const sizes = parseSizes(opts.sizes);\n  const densities = opts.densities?.trim() ? parseDensities(opts.densities.trim()) : ctx.options.densities;\n  checkDensities(densities);\n  const hwRatio = width && height ? height / width : 0;\n  const sizeVariants = [];\n  const srcsetVariants = [];\n  if (Object.keys(sizes).length >= 1) {\n    for (const key in sizes) {\n      const variant = getSizesVariant(key, String(sizes[key]), height, hwRatio, ctx);\n      if (variant === void 0) {\n        continue;\n      }\n      sizeVariants.push({\n        size: variant.size,\n        screenMaxWidth: variant.screenMaxWidth,\n        media: `(max-width: ${variant.screenMaxWidth}px)`\n      });\n      for (const density of densities) {\n        srcsetVariants.push({\n          width: variant._cWidth * density,\n          src: getVariantSrc(ctx, input, opts, variant, density)\n        });\n      }\n    }\n    finaliseSizeVariants(sizeVariants);\n  } else {\n    for (const density of densities) {\n      const key = Object.keys(sizes)[0];\n      let variant = key ? getSizesVariant(key, String(sizes[key]), height, hwRatio, ctx) : void 0;\n      if (variant === void 0) {\n        variant = {\n          size: \"\",\n          screenMaxWidth: 0,\n          _cWidth: opts.modifiers?.width,\n          _cHeight: opts.modifiers?.height\n        };\n      }\n      srcsetVariants.push({\n        width: density,\n        src: getVariantSrc(ctx, input, opts, variant, density)\n      });\n    }\n  }\n  finaliseSrcsetVariants(srcsetVariants);\n  const defaultVariant = srcsetVariants[srcsetVariants.length - 1];\n  const sizesVal = sizeVariants.length ? sizeVariants.map((v) => `${v.media ? v.media + \" \" : \"\"}${v.size}`).join(\", \") : void 0;\n  const suffix = sizesVal ? \"w\" : \"x\";\n  const srcsetVal = srcsetVariants.map((v) => `${v.src} ${v.width}${suffix}`).join(\", \");\n  return {\n    sizes: sizesVal,\n    srcset: srcsetVal,\n    src: defaultVariant?.src\n  };\n}\nfunction getSizesVariant(key, size, height, hwRatio, ctx) {\n  const screenMaxWidth = ctx.options.screens && ctx.options.screens[key] || Number.parseInt(key);\n  const isFluid = size.endsWith(\"vw\");\n  if (!isFluid && /^\\d+$/.test(size)) {\n    size = size + \"px\";\n  }\n  if (!isFluid && !size.endsWith(\"px\")) {\n    return void 0;\n  }\n  let _cWidth = Number.parseInt(size);\n  if (!screenMaxWidth || !_cWidth) {\n    return void 0;\n  }\n  if (isFluid) {\n    _cWidth = Math.round(_cWidth / 100 * screenMaxWidth);\n  }\n  const _cHeight = hwRatio ? Math.round(_cWidth * hwRatio) : height;\n  return {\n    size,\n    screenMaxWidth,\n    _cWidth,\n    _cHeight\n  };\n}\nfunction getVariantSrc(ctx, input, opts, variant, density) {\n  return ctx.$img(\n    input,\n    {\n      ...opts.modifiers,\n      width: variant._cWidth ? variant._cWidth * density : void 0,\n      height: variant._cHeight ? variant._cHeight * density : void 0\n    },\n    opts\n  );\n}\nfunction finaliseSizeVariants(sizeVariants) {\n  sizeVariants.sort((v1, v2) => v1.screenMaxWidth - v2.screenMaxWidth);\n  let previousMedia = null;\n  for (let i = sizeVariants.length - 1; i >= 0; i--) {\n    const sizeVariant = sizeVariants[i];\n    if (sizeVariant.media === previousMedia) {\n      sizeVariants.splice(i, 1);\n    }\n    previousMedia = sizeVariant.media;\n  }\n  for (let i = 0; i < sizeVariants.length; i++) {\n    sizeVariants[i].media = sizeVariants[i + 1]?.media || \"\";\n  }\n}\nfunction finaliseSrcsetVariants(srcsetVariants) {\n  srcsetVariants.sort((v1, v2) => v1.width - v2.width);\n  let previousWidth = null;\n  for (let i = srcsetVariants.length - 1; i >= 0; i--) {\n    const sizeVariant = srcsetVariants[i];\n    if (sizeVariant.width === previousWidth) {\n      srcsetVariants.splice(i, 1);\n    }\n    previousWidth = sizeVariant.width;\n  }\n}\n","import { joinURL, encodePath, encodeParam } from \"ufo\";\nimport { createOperationsGenerator } from \"#image\";\nconst operationsGenerator = createOperationsGenerator({\n  keyMap: {\n    format: \"f\",\n    fit: \"fit\",\n    width: \"w\",\n    height: \"h\",\n    resize: \"s\",\n    quality: \"q\",\n    background: \"b\"\n  },\n  joinWith: \"&\",\n  formatter: (key, val) => encodeParam(key) + \"_\" + encodeParam(val)\n});\nexport const getImage = (src, { modifiers = {}, baseURL } = {}, ctx) => {\n  if (modifiers.width && modifiers.height) {\n    modifiers.resize = `${modifiers.width}x${modifiers.height}`;\n    delete modifiers.width;\n    delete modifiers.height;\n  }\n  const params = operationsGenerator(modifiers) || \"_\";\n  if (!baseURL) {\n    baseURL = joinURL(ctx.options.nuxt.baseURL, \"/_ipx\");\n  }\n  return {\n    url: joinURL(baseURL, params, encodePath(src))\n  };\n};\nexport const validateDomains = true;\nexport const supportsAlias = true;\n","\nimport * as ipxStaticRuntime$KdcD3ymjWr from 'C:/Users/jpedr/OneDrive/Documentos/Coding/learning/joao/weather-forecast/frontend/node_modules/.pnpm/@nuxt+image@1.8.1/node_modules/@nuxt/image/dist/runtime/providers/ipxStatic'\n\nexport const imageOptions = {\n  \"screens\": {\n    \"xs\": 320,\n    \"sm\": 640,\n    \"md\": 768,\n    \"lg\": 1024,\n    \"xl\": 1280,\n    \"xxl\": 1536,\n    \"2xl\": 1536\n  },\n  \"presets\": {},\n  \"provider\": \"ipxStatic\",\n  \"domains\": [],\n  \"alias\": {},\n  \"densities\": [\n    1,\n    2\n  ],\n  \"format\": [\n    \"webp\"\n  ]\n}\n\nimageOptions.providers = {\n  ['ipxStatic']: { provider: ipxStaticRuntime$KdcD3ymjWr, defaults: {} }\n}\n        ","import { createImage } from \"./image.js\";\nimport { imageOptions } from \"#build/image-options\";\nimport { useNuxtApp, useRuntimeConfig } from \"#imports\";\nexport const useImage = () => {\n  const config = useRuntimeConfig();\n  const nuxtApp = useNuxtApp();\n  return nuxtApp.$img || nuxtApp._img || (nuxtApp._img = createImage({\n    ...imageOptions,\n    nuxt: {\n      baseURL: config.app.baseURL\n    },\n    runtimeConfig: config\n  }));\n};\n","import { computed } from \"vue\";\nimport { parseSize } from \"../utils/index.js\";\nimport { useImage } from \"#imports\";\nexport const baseImageProps = {\n  // input source\n  src: { type: String, required: false },\n  // modifiers\n  format: { type: String, required: false },\n  quality: { type: [Number, String], required: false },\n  background: { type: String, required: false },\n  fit: { type: String, required: false },\n  modifiers: { type: Object, required: false },\n  // options\n  preset: { type: String, required: false },\n  provider: { type: String, required: false },\n  sizes: { type: [Object, String], required: false },\n  densities: { type: String, required: false },\n  preload: {\n    type: [Boolean, Object],\n    required: false\n  },\n  // <img> attributes\n  width: { type: [String, Number], required: false },\n  height: { type: [String, Number], required: false },\n  alt: { type: String, required: false },\n  referrerpolicy: { type: String, required: false },\n  usemap: { type: String, required: false },\n  longdesc: { type: String, required: false },\n  ismap: { type: Boolean, required: false },\n  loading: {\n    type: String,\n    required: false,\n    validator: (val) => [\"lazy\", \"eager\"].includes(val)\n  },\n  crossorigin: {\n    type: [Boolean, String],\n    required: false,\n    validator: (val) => [\"anonymous\", \"use-credentials\", \"\", true, false].includes(val)\n  },\n  decoding: {\n    type: String,\n    required: false,\n    validator: (val) => [\"async\", \"auto\", \"sync\"].includes(val)\n  },\n  // csp\n  nonce: { type: [String], required: false }\n};\nexport const useBaseImage = (props) => {\n  const options = computed(() => {\n    return {\n      provider: props.provider,\n      preset: props.preset\n    };\n  });\n  const attrs = computed(() => {\n    return {\n      width: parseSize(props.width),\n      height: parseSize(props.height),\n      alt: props.alt,\n      referrerpolicy: props.referrerpolicy,\n      usemap: props.usemap,\n      longdesc: props.longdesc,\n      ismap: props.ismap,\n      crossorigin: props.crossorigin === true ? \"anonymous\" : props.crossorigin || void 0,\n      loading: props.loading,\n      decoding: props.decoding,\n      nonce: props.nonce\n    };\n  });\n  const $img = useImage();\n  const modifiers = computed(() => {\n    return {\n      ...props.modifiers,\n      width: parseSize(props.width),\n      height: parseSize(props.height),\n      format: props.format,\n      quality: props.quality || $img.options.quality,\n      background: props.background,\n      fit: props.fit\n    };\n  });\n  return {\n    options,\n    attrs,\n    modifiers\n  };\n};\nexport const pictureProps = {\n  ...baseImageProps,\n  legacyFormat: { type: String, default: null },\n  imgAttrs: { type: Object, default: null }\n};\nexport const imgProps = {\n  ...baseImageProps,\n  placeholder: { type: [Boolean, String, Number, Array], required: false },\n  placeholderClass: { type: String, required: false }\n};\n","import { computed, getCurrentInstance, getCurrentScope, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, unref, watch } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nimport { createError } from \"./error.js\";\nimport { onNuxtReady } from \"./ready.js\";\nimport { asyncDataDefaults, resetAsyncDataToUndefined } from \"#build/nuxt.config.mjs\";\nconst isDefer = (dedupe) => dedupe === \"defer\" || dedupe === false;\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  let [key, _handler, options = {}] = args;\n  if (typeof key !== \"string\") {\n    throw new TypeError(\"[nuxt] [asyncData] key must be a string.\");\n  }\n  if (typeof _handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [asyncData] handler must be a function.\");\n  }\n  const nuxtApp = useNuxtApp();\n  const handler = import.meta.client || !import.meta.prerender || !nuxtApp.ssrContext?._sharedPrerenderCache ? _handler : () => {\n    const value = nuxtApp.ssrContext._sharedPrerenderCache.get(key);\n    if (value) {\n      return value;\n    }\n    const promise = Promise.resolve().then(() => nuxtApp.runWithContext(_handler));\n    nuxtApp.ssrContext._sharedPrerenderCache.set(key, promise);\n    return promise;\n  };\n  const getDefault = () => asyncDataDefaults.value;\n  const getDefaultCachedData = () => nuxtApp.isHydrating ? nuxtApp.payload.data[key] : nuxtApp.static.data[key];\n  options.server = options.server ?? true;\n  options.default = options.default ?? getDefault;\n  options.getCachedData = options.getCachedData ?? getDefaultCachedData;\n  options.lazy = options.lazy ?? false;\n  options.immediate = options.immediate ?? true;\n  options.deep = options.deep ?? asyncDataDefaults.deep;\n  options.dedupe = options.dedupe ?? \"cancel\";\n  if (import.meta.dev && typeof options.dedupe === \"boolean\") {\n    console.warn(\"[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use 'cancel' or 'defer' instead.\");\n  }\n  const initialCachedData = options.getCachedData(key, nuxtApp);\n  const hasCachedData = initialCachedData != null;\n  if (!nuxtApp._asyncData[key] || !options.immediate) {\n    nuxtApp.payload._errors[key] ??= asyncDataDefaults.errorValue;\n    const _ref = options.deep ? ref : shallowRef;\n    nuxtApp._asyncData[key] = {\n      data: _ref(hasCachedData ? initialCachedData : options.default()),\n      pending: ref(!hasCachedData),\n      error: toRef(nuxtApp.payload._errors, key),\n      status: ref(\"idle\"),\n      _default: options.default\n    };\n  }\n  const asyncData = { ...nuxtApp._asyncData[key] };\n  delete asyncData._default;\n  asyncData.refresh = asyncData.execute = (opts = {}) => {\n    if (nuxtApp._asyncDataPromises[key]) {\n      if (isDefer(opts.dedupe ?? options.dedupe)) {\n        return nuxtApp._asyncDataPromises[key];\n      }\n      nuxtApp._asyncDataPromises[key].cancelled = true;\n    }\n    if (opts._initial || nuxtApp.isHydrating && opts._initial !== false) {\n      const cachedData = opts._initial ? initialCachedData : options.getCachedData(key, nuxtApp);\n      if (cachedData != null) {\n        return Promise.resolve(cachedData);\n      }\n    }\n    asyncData.pending.value = true;\n    asyncData.status.value = \"pending\";\n    const promise = new Promise(\n      (resolve, reject) => {\n        try {\n          resolve(handler(nuxtApp));\n        } catch (err) {\n          reject(err);\n        }\n      }\n    ).then(async (_result) => {\n      if (promise.cancelled) {\n        return nuxtApp._asyncDataPromises[key];\n      }\n      let result = _result;\n      if (options.transform) {\n        result = await options.transform(_result);\n      }\n      if (options.pick) {\n        result = pick(result, options.pick);\n      }\n      if (import.meta.dev && import.meta.server && typeof result === \"undefined\") {\n        console.warn(`[nuxt] \\`${options._functionName || \"useAsyncData\"}\\` must return a value (it should not be \\`undefined\\`) or the request may be duplicated on the client side.`);\n      }\n      nuxtApp.payload.data[key] = result;\n      asyncData.data.value = result;\n      asyncData.error.value = asyncDataDefaults.errorValue;\n      asyncData.status.value = \"success\";\n    }).catch((error) => {\n      if (promise.cancelled) {\n        return nuxtApp._asyncDataPromises[key];\n      }\n      asyncData.error.value = createError(error);\n      asyncData.data.value = unref(options.default());\n      asyncData.status.value = \"error\";\n    }).finally(() => {\n      if (promise.cancelled) {\n        return;\n      }\n      asyncData.pending.value = false;\n      delete nuxtApp._asyncDataPromises[key];\n    });\n    nuxtApp._asyncDataPromises[key] = promise;\n    return nuxtApp._asyncDataPromises[key];\n  };\n  asyncData.clear = () => clearNuxtDataByKey(nuxtApp, key);\n  const initialFetch = () => asyncData.refresh({ _initial: true });\n  const fetchOnServer = options.server !== false && nuxtApp.payload.serverRendered;\n  if (import.meta.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    if (getCurrentInstance()) {\n      onServerPrefetch(() => promise);\n    } else {\n      nuxtApp.hook(\"app:created\", async () => {\n        await promise;\n      });\n    }\n  }\n  if (import.meta.client) {\n    const instance = getCurrentInstance();\n    if (import.meta.dev && !nuxtApp.isHydrating && !nuxtApp._processingMiddleware && (!instance || instance?.isMounted)) {\n      console.warn(`[nuxt] [${options._functionName || \"useAsyncData\"}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);\n    }\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      onBeforeMount(() => {\n        cbs.forEach((cb) => {\n          cb();\n        });\n        cbs.splice(0, cbs.length);\n      });\n      onUnmounted(() => cbs.splice(0, cbs.length));\n    }\n    if (fetchOnServer && nuxtApp.isHydrating && (asyncData.error.value || initialCachedData != null)) {\n      asyncData.pending.value = false;\n      asyncData.status.value = asyncData.error.value ? \"error\" : \"success\";\n    } else if (instance && (nuxtApp.payload.serverRendered && nuxtApp.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    const hasScope = getCurrentScope();\n    if (options.watch) {\n      const unsub = watch(options.watch, () => asyncData.refresh());\n      if (hasScope) {\n        onScopeDispose(unsub);\n      }\n    }\n    const off = nuxtApp.hook(\"app:data:refresh\", async (keys) => {\n      if (!keys || keys.includes(key)) {\n        await asyncData.refresh();\n      }\n    });\n    if (hasScope) {\n      onScopeDispose(off);\n    }\n  }\n  const asyncDataPromise = Promise.resolve(nuxtApp._asyncDataPromises[key]).then(() => asyncData);\n  Object.assign(asyncDataPromise, asyncData);\n  return asyncDataPromise;\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options = {}] = args;\n  if (import.meta.dev && import.meta.client) {\n    options._functionName ||= \"useLazyAsyncData\";\n  }\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nexport function useNuxtData(key) {\n  const nuxtApp = useNuxtApp();\n  if (!(key in nuxtApp.payload.data)) {\n    nuxtApp.payload.data[key] = asyncDataDefaults.value;\n  }\n  return {\n    data: computed({\n      get() {\n        return nuxtApp._asyncData[key]?.data.value ?? nuxtApp.payload.data[key];\n      },\n      set(value) {\n        if (nuxtApp._asyncData[key]) {\n          nuxtApp._asyncData[key].data.value = value;\n        } else {\n          nuxtApp.payload.data[key] = value;\n        }\n      }\n    })\n  };\n}\nexport async function refreshNuxtData(keys) {\n  if (import.meta.server) {\n    return Promise.resolve();\n  }\n  await new Promise((resolve) => onNuxtReady(resolve));\n  const _keys = keys ? toArray(keys) : void 0;\n  await useNuxtApp().hooks.callHookParallel(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const key of _keys) {\n    clearNuxtDataByKey(nuxtApp, key);\n  }\n}\nfunction clearNuxtDataByKey(nuxtApp, key) {\n  if (key in nuxtApp.payload.data) {\n    nuxtApp.payload.data[key] = void 0;\n  }\n  if (key in nuxtApp.payload._errors) {\n    nuxtApp.payload._errors[key] = asyncDataDefaults.errorValue;\n  }\n  if (nuxtApp._asyncData[key]) {\n    nuxtApp._asyncData[key].data.value = resetAsyncDataToUndefined ? void 0 : nuxtApp._asyncData[key]._default();\n    nuxtApp._asyncData[key].error.value = asyncDataDefaults.errorValue;\n    nuxtApp._asyncData[key].pending.value = false;\n    nuxtApp._asyncData[key].status.value = \"idle\";\n  }\n  if (key in nuxtApp._asyncDataPromises) {\n    if (nuxtApp._asyncDataPromises[key]) {\n      nuxtApp._asyncDataPromises[key].cancelled = true;\n    }\n    nuxtApp._asyncDataPromises[key] = void 0;\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\n","import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxtApp = useNuxtApp();\n  const state = toRef(nuxtApp.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxtApp.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","import { cloneVNode, createElementBlock, createStaticVNode, defineComponent, getCurrentInstance, h, onMounted, provide, ref } from \"vue\";\nimport { isPromise } from \"@vue/shared\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { getFragmentHTML } from \"./utils.js\";\nexport const clientOnlySymbol = Symbol.for(\"nuxt:client-only\");\nexport default defineComponent({\n  name: \"ClientOnly\",\n  inheritAttrs: false,\n  props: [\"fallback\", \"placeholder\", \"placeholderTag\", \"fallbackTag\"],\n  setup(_, { slots, attrs }) {\n    const mounted = ref(false);\n    onMounted(() => {\n      mounted.value = true;\n    });\n    if (import.meta.dev) {\n      const nuxtApp = useNuxtApp();\n      nuxtApp._isNuxtPageUsed = true;\n      nuxtApp._isNuxtLayoutUsed = true;\n    }\n    provide(clientOnlySymbol, true);\n    return (props) => {\n      if (mounted.value) {\n        return slots.default?.();\n      }\n      const slot = slots.fallback || slots.placeholder;\n      if (slot) {\n        return slot();\n      }\n      const fallbackStr = props.fallback || props.placeholder || \"\";\n      const fallbackTag = props.fallbackTag || props.placeholderTag || \"span\";\n      return createElementBlock(fallbackTag, attrs, fallbackStr);\n    };\n  }\n});\nconst cache = /* @__PURE__ */ new WeakMap();\n// @__NO_SIDE_EFFECTS__\nexport function createClientOnly(component) {\n  if (cache.has(component)) {\n    return cache.get(component);\n  }\n  const clone = { ...component };\n  if (clone.render) {\n    clone.render = (ctx, cache2, $props, $setup, $data, $options) => {\n      if (import.meta.client && ($setup.mounted$ ?? ctx.mounted$)) {\n        const res = component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options);\n        return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n      } else {\n        const fragment = getFragmentHTML(ctx._.vnode.el ?? null) ?? [\"<div></div>\"];\n        return import.meta.client ? createStaticVNode(fragment.join(\"\"), fragment.length) : h(\"div\", ctx.$attrs ?? ctx._.attrs);\n      }\n    };\n  } else if (clone.template) {\n    clone.template = `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else><div></div></template>\n    `;\n  }\n  clone.setup = (props, ctx) => {\n    const nuxtApp = useNuxtApp();\n    const mounted$ = ref(import.meta.client && nuxtApp.isHydrating === false);\n    const instance = getCurrentInstance();\n    if (import.meta.server || nuxtApp.isHydrating) {\n      const attrs = { ...instance.attrs };\n      const directives = extractDirectives(instance);\n      for (const key in attrs) {\n        delete instance.attrs[key];\n      }\n      onMounted(() => {\n        Object.assign(instance.attrs, attrs);\n        instance.vnode.dirs = directives;\n      });\n    }\n    onMounted(() => {\n      mounted$.value = true;\n    });\n    const setupState = component.setup?.(props, ctx) || {};\n    if (isPromise(setupState)) {\n      return Promise.resolve(setupState).then((setupState2) => {\n        if (typeof setupState2 !== \"function\") {\n          setupState2 = setupState2 || {};\n          setupState2.mounted$ = mounted$;\n          return setupState2;\n        }\n        return (...args) => {\n          if (import.meta.client && (mounted$.value || !nuxtApp.isHydrating)) {\n            const res = setupState2(...args);\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n          } else {\n            const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? [\"<div></div>\"];\n            return import.meta.client ? createStaticVNode(fragment.join(\"\"), fragment.length) : h(\"div\", ctx.attrs);\n          }\n        };\n      });\n    } else {\n      if (typeof setupState === \"function\") {\n        return (...args) => {\n          if (mounted$.value) {\n            return h(setupState(...args), ctx.attrs);\n          }\n          const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? [\"<div></div>\"];\n          return import.meta.client ? createStaticVNode(fragment.join(\"\"), fragment.length) : h(\"div\", ctx.attrs);\n        };\n      }\n      return Object.assign(setupState, { mounted$ });\n    }\n  };\n  cache.set(component, clone);\n  return clone;\n}\nfunction extractDirectives(instance) {\n  if (!instance || !instance.vnode.dirs) {\n    return null;\n  }\n  const directives = instance.vnode.dirs;\n  instance.vnode.dirs = null;\n  return directives;\n}\n","<template>\n  <img\n    ref=\"imgEl\"\n    :class=\"props.placeholder && !placeholderLoaded ? props.placeholderClass : undefined\"\n    v-bind=\"{\n      ...isServer ? { onerror: 'this.setAttribute(\\'data-error\\', 1)' } : {},\n      ...imgAttrs,\n      ...attrs,\n    }\"\n    :src=\"src\"\n  >\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref, useAttrs } from 'vue'\nimport { useHead } from '@unhead/vue'\nimport { useImage } from '../composables'\nimport { parseSize } from '../utils'\nimport { prerenderStaticImages } from '../utils/prerender'\nimport { markFeatureUsage } from '../utils/performance'\nimport { imgProps, useBaseImage } from './_base'\nimport { useNuxtApp } from '#app'\n\nconst props = defineProps(imgProps)\n\nconst attrs = useAttrs()\n\nconst emit = defineEmits<{\n  (event: 'load', payload: Event): unknown\n  (event: 'error', payload: string | Event): unknown\n}>()\n\nconst isServer = import.meta.server\n\nconst $img = useImage()\n\nconst _base = useBaseImage(props)\n\nconst placeholderLoaded = ref(false)\nconst imgEl = ref<HTMLImageElement>()\n\ntype AttrsT = typeof _base.attrs.value & {\n  'sizes'?: string\n  'srcset'?: string\n  'data-nuxt-img'?: string\n}\n\nconst sizes = computed(() => $img.getSizes(props.src!, {\n  ..._base.options.value,\n  sizes: props.sizes,\n  densities: props.densities,\n  modifiers: {\n    ..._base.modifiers.value,\n    width: parseSize(props.width),\n    height: parseSize(props.height),\n  },\n}))\n\nconst imgAttrs = computed(() => {\n  const attrs: AttrsT = { ..._base.attrs.value, 'data-nuxt-img': '' }\n\n  if (!props.placeholder || placeholderLoaded.value) {\n    attrs.sizes = sizes.value.sizes\n    attrs.srcset = sizes.value.srcset\n  }\n\n  return attrs\n})\n\nconst placeholder = computed(() => {\n  let placeholder = props.placeholder\n\n  if (placeholder === '') {\n    placeholder = true\n  }\n\n  if (!placeholder || placeholderLoaded.value) {\n    return false\n  }\n\n  if (typeof placeholder === 'string') {\n    return placeholder\n  }\n\n  const size = (Array.isArray(placeholder)\n    ? placeholder\n    : (typeof placeholder === 'number' ? [placeholder, placeholder] : [10, 10])) as [w: number, h: number, q: number, b: number]\n\n  return $img(props.src!, {\n    ..._base.modifiers.value,\n    width: size[0],\n    height: size[1],\n    quality: size[2] || 50,\n    blur: size[3] || 3,\n  }, _base.options.value)\n})\n\nconst mainSrc = computed(() =>\n  props.sizes\n    ? sizes.value.src\n    : $img(props.src!, _base.modifiers.value, _base.options.value),\n)\n\nconst src = computed(() => placeholder.value ? placeholder.value : mainSrc.value)\n\nif (import.meta.server && props.preload) {\n  const isResponsive = Object.values(sizes.value).every(v => v)\n\n  useHead({\n    link: [{\n      rel: 'preload',\n      as: 'image',\n      nonce: props.nonce,\n      ...(!isResponsive\n        ? { href: src.value }\n        : {\n            href: sizes.value.src,\n            imagesizes: sizes.value.sizes,\n            imagesrcset: sizes.value.srcset,\n          }),\n      ...(typeof props.preload !== 'boolean' && props.preload.fetchPriority\n        ? { fetchpriority: props.preload.fetchPriority }\n        : {}),\n    }],\n  })\n}\n\n// Prerender static images\nif (import.meta.server && import.meta.prerender) {\n  prerenderStaticImages(src.value, sizes.value.srcset)\n}\n\nconst nuxtApp = useNuxtApp()\n\nconst initialLoad = nuxtApp.isHydrating\n\nonMounted(() => {\n  if (placeholder.value) {\n    const img = new Image()\n\n    if (mainSrc.value) {\n      img.src = mainSrc.value\n    }\n\n    if (props.sizes) {\n      img.sizes = sizes.value.sizes || ''\n      img.srcset = sizes.value.srcset\n    }\n\n    img.onload = (event) => {\n      placeholderLoaded.value = true\n      emit('load', event)\n    }\n\n    markFeatureUsage('nuxt-image')\n\n    return\n  }\n\n  if (!imgEl.value) {\n    return\n  }\n\n  if (imgEl.value.complete && initialLoad) {\n    if (imgEl.value.getAttribute('data-error')) {\n      emit('error', new Event('error'))\n    }\n    else {\n      emit('load', new Event('load'))\n    }\n  }\n\n  imgEl.value.onload = (event) => {\n    emit('load', event)\n  }\n\n  imgEl.value.onerror = (event) => {\n    emit('error', event)\n  }\n})\n</script>\n\n<script lang=\"ts\">\nexport { imgProps } from './_base'\n</script>\n","<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" fill=\"rgb(100, 177, 255)\" stroke=\"currentColor\"\r\n        stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"ai ai-Air\">\r\n        <path d=\"M3 8h7a3 3 0 1 0-3-3\" />\r\n        <path d=\"M4 16h11a3 3 0 1 1-3 3\" />\r\n        <path d=\"M2 12h17a3 3 0 1 0-3-3\" />\r\n    </svg>\r\n</template>","<template>\r\n    <svg viewBox=\"0 0 24 24\" fill=\"#ffffff\" stroke=\"\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n        <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\r\n        <g id=\"SVGRepo_iconCarrier\">\r\n            <path\r\n                d=\"M13 13L16 8M8 8H8.01M12 6H12.01M18 12H18.01M6 12H6.01M14 15C14 16.1046 13.1046 17 12 17C10.8954 17 10 16.1046 10 15C10 13.8954 10.8954 13 12 13C13.1046 13 14 13.8954 14 15ZM21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\r\n                stroke=\"orangered\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\r\n        </g>\r\n    </svg>\r\n</template>","<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" fill=\"orange\" stroke=\"red\"\r\n        stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"ai ai-Sun\">\r\n        <path d=\"M12 3V2m0 20v-1m9-9h1M2 12h1m15.5-6.5L20 4M4 20l1.5-1.5M4 4l1.5 1.5m13 13L20 20\" />\r\n        <circle cx=\"12\" cy=\"12\" r=\"4\" stroke=\"orange\"/>\r\n    </svg>\r\n</template>","<template>\r\n    <svg viewBox=\"0 0 24 24\" fill=\"rgb(50, 150, 255)\" stroke=\"rgb(100, 177, 255)\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g id=\"SVGRepo_bgCarrier\" stroke-width=\"1rem\"></g>\r\n        <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\r\n        <g id=\"SVGRepo_iconCarrier\">\r\n            <path\r\n                d=\"M12 21.5C16.1012 21.5 19.5 18.4372 19.5 14.5714C19.5 12.1555 18.2672 9.71249 16.8732 7.70906C15.4698 5.69214 13.8515 4.04821 12.9778 3.21778C12.4263 2.69364 11.5737 2.69364 11.0222 3.21779C10.1485 4.04821 8.53016 5.69214 7.1268 7.70906C5.73282 9.71249 4.5 12.1555 4.5 14.5714C4.5 18.4372 7.8988 21.5 12 21.5Z\"\r\n                stroke=\"rgb(100, 177, 255)\"></path>\r\n            <path\r\n                d=\"M12 18C11.4747 18 10.9546 17.8965 10.4693 17.6955C9.98396 17.4945 9.54301 17.1999 9.17157 16.8284C8.80014 16.457 8.5055 16.016 8.30448 15.5307C8.10346 15.0454 8 14.5253 8 14\"\r\n                stroke=\"\" stroke-linecap=\"round\"></path>\r\n        </g>\r\n    </svg>\r\n</template>","export const getImageUrlByWeatherStatus = (weatherMainStatus: string | undefined, isIcon: boolean) => {\r\n\r\n    switch (weatherMainStatus && weatherMainStatus?.toLowerCase()) {\r\n        case 'clouds':\r\n            return isIcon ? '/assets/imgs/cloudy.svg' : '/assets/imgs/background-cloudy.jpg';\r\n    \r\n        case 'windy':\r\n            return isIcon ? '/assets/imgs/wind.svg' : '/assets/imgs/background-windy.jpg';\r\n\r\n        case 'sunny':\r\n            return isIcon ? '/assets/imgs/sun.svg' : '/assets/imgs/background-sunny.jpg';\r\n\r\n        case 'rain':\r\n            return isIcon ? '/assets/imgs/cloud-rain.svg' : '/assets/imgs/background-rainy.jpg';\r\n\r\n        case 'snow':\r\n            return isIcon ? '/assets/imgs/snowflake.svg' : '/assets/imgs/background-snowy.jpg';\r\n\r\n        case 'thunderstorm':\r\n            return isIcon ? '/assets/imgs/cloud-lightning.svg' : '/assets/imgs/background-thunder.jpg';\r\n\r\n        case 'clear':\r\n            return isIcon ? '/assets/imgs/sun.svg' : '/assets/imgs/background-sunny.jpg';\r\n\r\n        case 'drizzle':\r\n            return isIcon ? '/assets/imgs/cloud-rain.svg' : '/assets/imgs/background-drizzle.jpg';\r\n    \r\n        default:\r\n               return isIcon ? '/assets/imgs/sun.svg' : '/assets/imgs/background-sunny.jpg';;\r\n    }\r\n}\r\n\r\nexport const capitalizeWord = (word: string) => {\r\n    return word.charAt(0)?.toUpperCase() + word.slice(1);\r\n}","<template>\r\n\r\n    <div class=\"forecast-item\">\r\n\r\n        <div class=\"summary\">\r\n\r\n            <NuxtImg class=\"weather-illustration\" :src=\"iconByWeatherStatus\" :alt=\"props?.item?.weather[0]?.description\"\r\n                :title=\"props?.item?.weather[0]?.description\" />\r\n\r\n            <div :style=\"{ display: 'flex', columnGap: '0.5rem', alignItems: 'center' }\">\r\n                <span>Day:</span>\r\n                <time :datetime=\"new Date(props?.item?.dt * 1000).toDateString()\">\r\n                    {{ new Date(props?.item?.dt * 1000).getDate() }}\r\n                </time>\r\n\r\n            </div>\r\n            <span>\r\n                {{ capitalizeWord(props?.item?.weather[0]?.description) }}\r\n            </span>\r\n\r\n        </div>\r\n\r\n        <div class=\"condition-container\">\r\n            <div class=\"condition\">\r\n                <span>Min:</span>\r\n                <div class=\"value\">\r\n                    <span\r\n                        :style=\"{ color: props?.item?.temp?.min > 18 ? 'orange' : '#ffffff', display: 'flex', columnGap: '0.25rem', fontWeight: 800 }\">\r\n                        <span>\r\n                            {{ props?.item?.temp?.min }}\r\n                        </span>\r\n                        <span>ºC</span>\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"condition\">\r\n                <span>Max:</span>\r\n\r\n                <div class=\"value\">\r\n                    <span\r\n                        :style=\"{ color: props?.item?.temp?.max > 18 ? 'orange' : '#ffffff', display: 'flex', columnGap: '0.25rem', fontWeight: 800 }\">\r\n                        <span> {{ props?.item?.temp?.max }}</span>\r\n                        <span>ºC</span>\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nconst props = defineProps(['item']);\r\n\r\nconst iconByWeatherStatus = computed(() => getImageUrlByWeatherStatus(props?.item?.weather[0]?.main, true))\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@media only screen and (max-width: 736px) {\r\n    .condition-container {\r\n        display: flex !important;\r\n        flex-direction: column;\r\n    }\r\n}\r\n\r\n.forecast-item {\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    max-width: fit-content;\r\n    margin: 1rem;\r\n    background-color: rgb(255, 255, 255, 0.1);\r\n    border-radius: $radius;\r\n\r\n    .summary {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n\r\n        .weather-illustration {\r\n            aspect-ratio: 16/9;\r\n            object-fit: contain;\r\n            object-position: center;\r\n            stroke: white;\r\n            fill: white;\r\n            min-width: 50px;\r\n            align-self: center;\r\n\r\n            >svg {\r\n                stroke: white;\r\n                fill: white;\r\n            }\r\n        }\r\n    }\r\n\r\n    .condition-container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: 1rem;\r\n\r\n        .condition {\r\n\r\n            display: flex;\r\n            column-gap: 1rem;\r\n            align-items: center;\r\n            border-radius: $radius;\r\n            padding: 0.75rem;\r\n            background-color: rgb(255, 255, 255, 0.1);\r\n\r\n            >svg {\r\n                aspect-ratio: 1;\r\n                object-fit: contain;\r\n                width: 1.5rem;\r\n                stroke: #ffffff;\r\n            }\r\n\r\n            .value {\r\n                display: flex;\r\n\r\n                .title {\r\n                    font-weight: 600;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</style>","<template>\r\n\r\n    <section class=\"forecast-container\">\r\n\r\n        <h4 class=\"title\">\r\n            Next 5 days forecast:\r\n        </h4>\r\n\r\n        <ul class=\"list\">\r\n            <li v-for=\"item in weatherForecast\">\r\n\r\n                <WeatherForecastItem :item=\"item\" />\r\n\r\n            </li>\r\n        </ul>\r\n    </section>\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nconst props = defineProps(['weatherForecast'])\r\nconst weatherForecast = computed(() => props?.weatherForecast)\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@media only screen and (max-width: 600px) {\r\n    .list {\r\n        display: flex !important;\r\n        flex-direction: column;\r\n    }\r\n\r\n}\r\n\r\n::-webkit-scrollbar {\r\n    max-width: 1px;\r\n    height: 7px;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n    background: #dcdcdc;\r\n    /* Color of the scrollbar track */\r\n}\r\n\r\n/* Thumb */\r\n::-webkit-scrollbar-thumb {\r\n    background-color: #0b487d;\r\n    border-radius: $radius;\r\n    border: $border;\r\n}\r\n\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n    background-color: #555;\r\n}\r\n\r\n.forecast-container {\r\n\r\n    border-top: $border;\r\n    margin-top: 1rem;\r\n\r\n    .title {\r\n        font-weight: 300;\r\n        font-size: 1.1rem;\r\n    }\r\n\r\n\r\n    .list {\r\n        border-radius: $radius;\r\n        display: flex;\r\n        margin: 1rem;\r\n        max-width: 25rem;\r\n        overflow-x: auto;\r\n\r\n        text-align: center;\r\n\r\n        list-style: none;\r\n\r\n        justify-items: center;\r\n        padding: 0;\r\n\r\n    }\r\n\r\n}\r\n</style>"," const months: Array<string> = ['January', 'February','March','April','May','June','July','August','September','October','November','December']\r\n\r\nexport const monthsMappedToNumbers = months.map((elem: string, index: number | string) => {\r\n    return {\r\n        index,\r\n        elem\r\n    }\r\n})\r\n","<template>\r\n\r\n    <section class=\"container\" :style=\"containerStyle\">\r\n\r\n\r\n        <section class=\"sub-container\">\r\n\r\n            <aside v-if=\"weatherForecastErrorMessage\" role=\"alert\" class=\"error-msg\">\r\n                {{ weatherForecastErrorMessage }}\r\n            </aside>\r\n\r\n            <div class=\"location-container\">\r\n                <div>\r\n                    <span class=\"location-city\">{{ city ? city + ', ' : '' }}</span>\r\n                    <span class=\"location-country\">{{ country }}</span>\r\n                </div>\r\n\r\n                <span class=\"date\">{{ formatedTodayDate }} </span>\r\n            </div>\r\n\r\n            <NuxtImg class=\"weather-illustration\" :src=\"iconByWeatherStatus\" :alt=\"weatherDescription\"\r\n                :title=\"weatherDescription\" />\r\n\r\n            <section class=\"summary-container\">\r\n\r\n                <h3 title=\"Temperature. Units - metric: Celsius\" class=\"temperature\"\r\n                    :style=\"{ color: temperature && temperature > 18 ? 'orange' : 'rgb(100, 177, 255)' }\">{{ temperature }}º\r\n                </h3>\r\n\r\n                <div class=\"feels-like-temperature-container\">\r\n                    <span>Feels like:</span>\r\n                    <h4 title=\"Feels like temperature. Units - metric: Celsius\" class=\"feels-like-temperature\"\r\n                        :style=\"{ color: feelsLikeTemperature && feelsLikeTemperature > 18 ? 'orange' : 'rgb(100, 177, 255)' }\">\r\n                        {{\r\n                            feelsLikeTemperature ? feelsLikeTemperature + 'º' : '0º' }}</h4>\r\n                </div>\r\n\r\n\r\n            </section>\r\n\r\n            <article class=\"weather-container\">\r\n\r\n                <div class=\"condition-container\">\r\n                    <div class=\"condition\" title=\"The current wind speed in km/h\">\r\n                        <WindIcon />\r\n\r\n                        <div class=\"value\">\r\n                            <span class=\"title\">Wind speed</span>\r\n                            <span>{{ windSpeed }} KM/H</span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"condition\" title=\"The current humidity of the air in %\">\r\n                        <HumidityIcon />\r\n                        <div class=\"value\">\r\n                            <span class=\"title\">Humidity</span>\r\n                            <span>{{ humidity }} %</span>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"condition\" title=\"Atmospheric pressure on the sea level, hPa\">\r\n                        <PressureIcon />\r\n                        <div class=\"value\">\r\n                            <span class=\"title\">Pressure</span>\r\n                            <span>{{ pressure }} hPa</span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"condition\" title=\"The current UV index\">\r\n                        <UVIndexIcon />\r\n                        <div class=\"value\">\r\n                            <span class=\"title\">UV index</span>\r\n                            <span>{{ uvIndex }}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"weatherForecast?.length\">\r\n                    <WeatherForecast :weatherForecast=\"weatherForecast\" />\r\n                </div>\r\n\r\n            </article>\r\n        </section>\r\n\r\n\r\n\r\n    </section>\r\n\r\n</template>\r\n\r\n<script async setup lang=\"ts\">\r\nimport WindIcon from '~/public/assets/icons/wind.vue';\r\nimport PressureIcon from '~/public/assets/icons/pressure.vue';\r\nimport UVIndexIcon from '~/public/assets/icons/sun.vue';\r\nimport HumidityIcon from '~/public/assets/icons/humidity.vue'\r\nimport WeatherForecast from '~/components/weather-forecast/weather-forecast.vue'\r\n\r\nimport { monthsMappedToNumbers } from '~/utils/constants/constants';\r\nimport { ref } from 'vue';\r\nimport { getImageUrlByWeatherStatus } from '~/utils/utils'\r\nimport type { DailyWeatherType } from '~/types/weather/weather-types';\r\n\r\nconst handleFindLocationByName = async (locationToFind: string) => {\r\n    try {\r\n\r\n        const { data: locationResponse } = await useAsyncData('location', () =>\r\n            $fetch('/api/location', {\r\n                method: 'GET',\r\n                params: {\r\n                    query: locationToFind\r\n                }\r\n            })\r\n        )\r\n\r\n        if (locationResponse?.value && 'address' in locationResponse.value) {\r\n            country.value = locationResponse?.value?.address?.country;\r\n            city.value = locationResponse?.value?.address?.city || locationResponse?.value?.address?.name;\r\n            latitude.value = locationResponse?.value?.lat;\r\n            longitude.value = locationResponse?.value?.lon;\r\n        }\r\n    } catch (error) {\r\n        console.error('Failed to get the location data from the server due to: ', error);\r\n    }\r\n}\r\n\r\nconst handleWeatherRequest = async () => {\r\n    try {\r\n\r\n        const { data: weatherResponse, error } = await useAsyncData('current', async () =>\r\n\r\n            await $fetch('/api/weather', {\r\n                method: 'POST',\r\n                params: {\r\n                    weatherType: 'current'\r\n                },\r\n                body: {\r\n                    lat: latitude.value,\r\n                    lon: longitude.value,\r\n                    lang: 'en',\r\n                    units: 'metric'\r\n                }\r\n            }),\r\n            {\r\n                watch: [latitude, longitude]\r\n            }\r\n\r\n        )\r\n        if (error?.value) {\r\n            weatherForecastErrorMessage.value = error?.value?.statusMessage ?? 'Failed to get the weather forecast data'\r\n        }\r\n        else if (weatherResponse?.value && 'temperature' in weatherResponse.value) {\r\n            temperature.value = weatherResponse.value.temperature;\r\n            feelsLikeTemperature.value = weatherResponse.value.feelsLikeTemperature;\r\n            windSpeed.value = weatherResponse.value.windSpeed;\r\n            humidity.value = weatherResponse.value.humidity;\r\n            pressure.value = weatherResponse.value.pressure;\r\n            cloudsPercentage.value = weatherResponse.value.cloudsPercentage;\r\n            weatherMainStatus.value = weatherResponse.value.weatherMainStatus?.toLowerCase();\r\n            weatherDescription.value = weatherResponse.value.weatherDescription?.toUpperCase();\r\n            weatherForecast.value = weatherResponse.value.daily?.splice(1, 5);\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        console.error('Failed to get the current weather data from the service due to: ', error)\r\n    }\r\n\r\n}\r\n\r\nconst props = defineProps(['locationToFind'])\r\n\r\nconst latitude = ref<string | number| undefined>(0);\r\nconst longitude = ref<string | number | undefined>(0);\r\n\r\nconst todayDate = new Date();\r\n\r\nconst monthFromTodayDate = monthsMappedToNumbers.find((elem) => elem?.index === todayDate.getMonth())?.elem;\r\nconst formatedTodayDate = ref(`Today, ${todayDate.getDay()}, ${monthFromTodayDate}`)\r\n\r\nconst temperature = ref<number|undefined>(0)\r\nconst feelsLikeTemperature = ref<number|undefined>(0)\r\nconst windSpeed = ref<number|undefined>(0)\r\nconst humidity = ref<number|undefined>(0)\r\nconst pressure = ref<number|undefined>(0)\r\nconst uvIndex = ref<number|undefined>(0)\r\nconst cloudsPercentage = ref<number|undefined>(0)\r\n\r\nconst weatherMainStatus = ref<string|undefined>(\"\")\r\nconst weatherDescription = ref<string|undefined>(\"\")\r\nconst weatherForecast = useState<Array<DailyWeatherType> | undefined>('weatherForecast', () => [])\r\nconst weatherForecastErrorMessage = ref(\"\")\r\n\r\nconst city = ref<string | undefined>(\"\");\r\nconst country = ref<string | undefined>(\"\");\r\nconst iconByWeatherStatus = computed(() => (\r\n    getImageUrlByWeatherStatus(weatherMainStatus.value, true)\r\n))\r\n\r\nconst containerStyle = computed(() => ({\r\n    backgroundImage: `url(${getImageUrlByWeatherStatus(weatherMainStatus.value, false)})`,\r\n}))\r\n\r\nconst router = useRoute()\r\n\r\nwatch(() => props?.locationToFind, (newLocation) => {\r\n    if (newLocation) {\r\n        city.value = newLocation;\r\n    }\r\n});\r\n\r\nif (!router.redirectedFrom) {\r\n    await handleFindLocationByName(props?.locationToFind);\r\n}\r\nawait handleWeatherRequest();\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@media only screen and (max-width: 425px) {\r\n    .condition-container {\r\n        display: flex !important;\r\n        flex-direction: column;\r\n    }\r\n}\r\n\r\n.container {\r\n    font-family: 'Roboto', sans-serif;\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 1rem;\r\n    text-align: center;\r\n    justify-items: center;\r\n    padding: 5rem 10rem 15rem 10rem;\r\n    color: #000000;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n\r\n    .sub-container {\r\n        min-width: 15rem;\r\n        max-width: 30rem;\r\n        width: 100%;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        row-gap: 1rem;\r\n        text-align: center;\r\n        justify-items: center;\r\n        padding: 4rem;\r\n        border-radius: $radius;\r\n        border: $border;\r\n\r\n        background: rgb(0, 0, 30, 0.1);\r\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n        backdrop-filter: blur(15px);\r\n        -webkit-backdrop-filter: blur(15px);\r\n        color: #ffffff;\r\n        font-family: 'Roboto', sans-serif;\r\n\r\n        .error-msg{\r\n            color: rgb(242, 242, 242);\r\n            font-weight: 500;\r\n            font-size: 1.2rem;\r\n            padding: 0.5rem;\r\n            border-radius: $radius;\r\n            background-color: #dc3545;\r\n        }\r\n\r\n        .location-container {\r\n            display: grid;\r\n            row-gap: 1rem;\r\n\r\n            .date {\r\n                font-weight: 100;\r\n                font-size: 1.1rem;\r\n                margin: 0;\r\n            }\r\n\r\n            .location-city {\r\n                font-weight: 500;\r\n                font-size: 1.3rem;\r\n                margin: 0;\r\n            }\r\n\r\n            .location-country {\r\n                font-weight: 500;\r\n                font-size: 1.3rem;\r\n                margin: 0;\r\n            }\r\n        }\r\n\r\n        .weather-illustration {\r\n            aspect-ratio: 16/9;\r\n            object-fit: contain;\r\n            object-position: center;\r\n            stroke: white;\r\n            fill: white;\r\n            width: 200px;\r\n            align-self: center;\r\n\r\n            >svg {\r\n                stroke: white;\r\n                fill: white;\r\n            }\r\n        }\r\n\r\n        .summary-container {\r\n            display: grid;\r\n            justify-items: center;\r\n            text-align: center;\r\n            align-items: center;\r\n            row-gap: 1rem;\r\n\r\n            .temperature {\r\n                font-weight: 500;\r\n                font-size: 2.5rem;\r\n                margin: 0;\r\n                text-shadow: 1px 1px 1px #ffffff;\r\n            }\r\n\r\n            .feels-like-temperature-container {\r\n                display: flex;\r\n                gap: 0.5rem;\r\n\r\n                .feels-like-temperature {\r\n                    font-weight: 500;\r\n                    font-size: 1rem;\r\n                    margin: 0;\r\n                }\r\n            }\r\n\r\n            .weather-status {\r\n                font-weight: 300;\r\n                font-size: 2rem;\r\n                text-transform: capitalize;\r\n                margin: 0;\r\n            }\r\n        }\r\n\r\n        .weather-container {\r\n            margin-top: 2rem;\r\n            text-align: center;\r\n            justify-content: center;\r\n            display: grid;\r\n            container-name: condition-container;\r\n            container-type: inline-size;\r\n\r\n            .condition-container {\r\n                display: grid;\r\n                grid-template-columns: 1fr 1fr;\r\n                gap: 1rem;\r\n                margin: 1rem;\r\n\r\n                .condition {\r\n\r\n                    display: flex;\r\n                    column-gap: 1rem;\r\n                    align-items: center;\r\n                    border: 0.5px solid #ffffff;\r\n                    border-radius: $radius;\r\n                    padding: 0.75rem;\r\n                    background-color: rgb(255, 255, 255, 0.1);\r\n\r\n                    >svg {\r\n                        aspect-ratio: 1;\r\n                        object-fit: contain;\r\n                        width: 1.5rem;\r\n                        stroke: #ffffff;\r\n                    }\r\n\r\n                    .value {\r\n                        display: grid;\r\n                        row-gap: 0.5rem;\r\n\r\n                        .title {\r\n                            font-weight: 600;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n}\r\n</style>","<template>\r\n    <article class=\"hero-container\">\r\n        <WeatherStatus :locationToFind=\"locationToFind\"/>\r\n    </article>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nconst props: {readonly locationToFind?: any} = defineProps(['locationToFind']) ;\r\n\r\nconst locationToFind = ref(props?.locationToFind);\r\n\r\nwatch(() => props?.locationToFind, (newLocation) => {\r\n  locationToFind.value = newLocation;\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.hero-container {\r\n    font-family: 'Roboto', sans-serif;\r\n    background-color: #427bff;\r\n    height: 100%;\r\n}\r\n</style>\r\n","<template>\r\n\r\n    <dialog role=\"dialog\" open=\"true\" class=\"overlay\" aria-label=\"generic overlay\">\r\n\r\n        <section aria-label=\"overlay content\" >\r\n            <h1 class=\"title\">Loading content...</h1>\r\n\r\n            <a href=\"/\" class=\"retry-btn\" role=\"button\">\r\n                Retry\r\n\r\n            </a>\r\n        </section>\r\n\r\n    </dialog>\r\n\r\n\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.overlay {\r\n    position: absolute;\r\n    z-index: 2;\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-items: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: none;\r\n\r\n    background-color: rgb(255, 255, 255, 0.1);\r\n    backdrop-filter: blur(10px);\r\n    text-align: 'center';\r\n    color: #ffffff;\r\n\r\n\r\n    .title {\r\n        font-size: 2rem;\r\n    }\r\n\r\n    .retry-btn {\r\n        padding: 0.5rem;\r\n        border: $border;\r\n        border-radius: $radius;\r\n        background-color: rgb(255, 255, 255, 0.1);\r\n        color: #ffffff;\r\n        text-decoration: none;\r\n\r\n    }\r\n}\r\n</style>"],"names":["getImage","attrs","placeholder","_ssrRenderAttrs","_mergeProps","_a","_withAsyncContext"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,6,7,8,9,10,11]}